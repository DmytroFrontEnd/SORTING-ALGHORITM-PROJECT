{"version":3,"sources":["Components/BubbleSort/BubbleSort.js","Components/BubbleSortAnimation/BubbleSortAnimation.js","Components/MergeSort/MergeSort.js","Components/Button/Button.jsx","Components/Input/Input.jsx","Components/SortingArray.jsx","Components/MergeSortAnimation/MergeSortAnimation.js","App.js","reportWebVitals.js","index.js","Components/SortingArray.module.css"],"names":["bubbleSort","auxiliaryArray","animations","N","length","i","j","push","swap","firstIndex","secondIndex","temp","bubble","disable","arr","speed","slice","bubbleSortAlgorithm","isColorChanged","arrayColumn","document","getElementsByClassName","color","barOneIndex","barTwoIndex","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height","mergeSortAlgorithm","array","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","Button","props","className","disabled","onClick","buttonHandler","text","Input","htmlFor","value","onChange","onChangeHandler","type","min","max","step","id","SortingArray","useState","size","setSize","setDisable","setSpeed","trunc","random","setArray","generateNewArray","e","target","styles","allColumns","map","buttonsDiv","arrayBars","barOneIdx","barTwoIdx","mergeSort","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.344650f0.chunk.js","sourcesContent":["export const bubbleSortAlgorithm = (arr) => {\r\n  let animations = [];\r\n  let auxiliaryArray = arr.slice();\r\n  bubbleSort(auxiliaryArray, animations);\r\n  arr = auxiliaryArray;\r\n  return [animations, arr];\r\n};\r\n\r\nconst bubbleSort = (auxiliaryArray, animations) => {\r\n  const N = auxiliaryArray.length;\r\n  for (let i = 0; i < N; i++) {\r\n    for (let j = 0; j < N - 1; j++) {\r\n      animations.push([j, j + 1]);\r\n      animations.push([j, j + 1]);\r\n      if (auxiliaryArray[j] > auxiliaryArray[j + 1]) {\r\n        animations.push([j, auxiliaryArray[j + 1]]);\r\n        animations.push([j + 1, auxiliaryArray[j]]);\r\n        swap(auxiliaryArray, j, j + 1);\r\n      } else {\r\n        animations.push([-1, -1]);\r\n        animations.push([-1, -1]);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst swap = (auxiliaryArray, firstIndex, secondIndex) => {\r\n  let temp = auxiliaryArray[firstIndex];\r\n  auxiliaryArray[firstIndex] = auxiliaryArray[secondIndex];\r\n  auxiliaryArray[secondIndex] = temp;\r\n};\r\n","import { bubbleSortAlgorithm } from \"../BubbleSort/BubbleSort\";\r\nexport const bubble = (disable, arr, speed) => {\r\n  disable(true);\r\n  let previousArray = [...arr];\r\n  let [animations] = bubbleSortAlgorithm(previousArray);\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const isColorChanged = i % 4 === 0 || i % 4 === 1;\r\n    const arrayColumn = document.getElementsByClassName(\"column\");\r\n    if (isColorChanged === true) {\r\n      const color = i % 4 === 0 ? \"red\" : \"rgb(29, 42, 165)\";\r\n      const [barOneIndex, barTwoIndex] = animations[i];\r\n      const barOneStyle = arrayColumn[barOneIndex].style;\r\n      const barTwoStyle = arrayColumn[barTwoIndex].style;\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = color;\r\n        barTwoStyle.backgroundColor = color;\r\n      }, i * speed);\r\n    } else {\r\n      const [barIndex, newHeight] = animations[i];\r\n      if (barIndex === -1) {\r\n        continue;\r\n      }\r\n      const barStyle = arrayColumn[barIndex].style;\r\n      setTimeout(() => {\r\n        barStyle.height = `${newHeight}px`;\r\n      }, i * speed);\r\n    }\r\n  }\r\n};\r\n","// export const mergeSortAlgorithm = (arr) => {\r\n//   const animations = [];\r\n//   if (arr.length <= 1) return arr;\r\n//   const auxiliaryArray = arr.splice();\r\n//   mergeSortHelper(arr, 0, arr.length - 1, auxiliaryArray, animations);\r\n//   return animations;\r\n// };\r\n\r\n// function mergeSortHelper(\r\n//   mainArray,\r\n//   startIndex,\r\n//   endIndex,\r\n//   auxiliaryArray,\r\n//   animations\r\n// ) {\r\n//   if (startIndex === endIndex) return;\r\n//   const middle = Math.floor((startIndex + endIndex) / 2);\r\n//   mergeSortHelper(auxiliaryArray, startIndex, middle, mainArray, animations);\r\n//   mergeSortHelper(auxiliaryArray, middle + 1, endIndex, mainArray, animations);\r\n//   doMerge(mainArray, startIndex, middle, endIndex, auxiliaryArray, animations);\r\n// }\r\n// function doMerge(\r\n//   mainArray,\r\n//   startIndex,\r\n//   middle,\r\n//   endIndex,\r\n//   auxiliaryArray,\r\n//   animations\r\n// ) {\r\n//   let s = startIndex;\r\n//   let i = startIndex;\r\n//   let m = middle + 1;\r\n//   while (i <= middle && m <= endIndex) {\r\n//     animations.push([i, m]);\r\n//     animations.push([i, m]);\r\n\r\n//     if (auxiliaryArray[i] <= auxiliaryArray[m]) {\r\n//       animations.push([s, auxiliaryArray[i]]);\r\n//       mainArray[s++] = auxiliaryArray[i++];\r\n//     } else {\r\n//       animations.push([s, auxiliaryArray[m]]);\r\n//       mainArray[s++] = auxiliaryArray[m++];\r\n//     }\r\n//   }\r\n//   while (i <= middle) {\r\n//     animations.push([i, i]);\r\n//     animations.push([i, i]);\r\n//     animations.push(s, [auxiliaryArray[i]]);\r\n//     mainArray[s++] = auxiliaryArray[i++];\r\n//   }\r\n//   while (m <= endIndex) {\r\n//     animations.push([m, m]);\r\n//     animations.push([m, m]);\r\n//     animations.push([s, auxiliaryArray[m]]);\r\n//     mainArray[s++] = auxiliaryArray[m++];\r\n//   }\r\n// }\r\nexport function mergeSortAlgorithm(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n","const Button = (props) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        className=\"btn\"\r\n        disabled={props.disable}\r\n        onClick={props.buttonHandler}\r\n      >\r\n        {props.text}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Button;\r\n","const Input = (props) => {\r\n  return (\r\n    <div className=\"inputDiv\">\r\n      <label htmlFor=\"customRange\" className=\"form-label\">\r\n        {props.text} {props.value}\r\n      </label>\r\n      <input\r\n        disabled={props.disable}\r\n        value={props.value}\r\n        onChange={props.onChangeHandler}\r\n        type=\"range\"\r\n        className=\"form-range\"\r\n        min={props.min} //0.1\r\n        max={props.max} //9\r\n        step={props.step} //0.1\r\n        id=\"customRange\"\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styles from \"./SortingArray.module.css\";\r\nimport { useState } from \"react\";\r\nimport { bubble } from \"./BubbleSortAnimation/BubbleSortAnimation\";\r\nimport { mergeSort } from \"./MergeSortAnimation/MergeSortAnimation\";\r\nimport Button from \"./Button/Button\";\r\nimport Input from \"./Input/Input\";\r\n\r\nconst SortingArray = () => {\r\n  const [size, setSize] = useState(200);\r\n  const [disable, setDisable] = useState(false);\r\n  const [speed, setSpeed] = useState(1);\r\n\r\n  let arrayColumn = [];\r\n  for (let i = 0; i < size; i++) {\r\n    arrayColumn.push(Math.trunc(Math.random() * 400 + 10));\r\n  }\r\n  const [array, setArray] = useState(arrayColumn);\r\n  const generateNewArray = () => {\r\n    arrayColumn = [];\r\n    for (let i = 0; i < size; i++) {\r\n      arrayColumn.push(Math.trunc(Math.random() * 400 + 10));\r\n    }\r\n    setArray(arrayColumn);\r\n  };\r\n  const sizeHandler = (e) => {\r\n    setSize(e.target.value);\r\n    generateNewArray();\r\n    return arrayColumn;\r\n  };\r\n  const speedHandler = (e) => {\r\n    setSpeed(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"responsive\">\r\n        Sorry but this page currently is not responsive, please visit our site\r\n        from your computer\r\n      </div>\r\n      <div className=\"screen\">\r\n        <div className=\"inputsDiv\">\r\n          <Input\r\n            value={size}\r\n            onChangeHandler={sizeHandler}\r\n            min=\"50\"\r\n            max=\"300\"\r\n            step=\"1\"\r\n            text=\"Change the size of array\"\r\n            disable={disable}\r\n          />\r\n\r\n          <Input\r\n            text=\"Change the speed of sorting: \"\r\n            value={speed}\r\n            disable={disable}\r\n            onChangeHandler={speedHandler}\r\n            min=\"0.1\"\r\n            max=\"9\"\r\n            step=\"0.1\"\r\n          />\r\n        </div>\r\n        <div className={styles.allColumns}>\r\n          {array.map((value, i) => (\r\n            <div\r\n              className=\"column\"\r\n              style={{ height: `${value}px` }}\r\n              key={i}\r\n            ></div>\r\n          ))}\r\n          <div className={styles.buttonsDiv}>\r\n            <Button\r\n              buttonHandler={() => setDisable(false)}\r\n              text=\"Unable Buttons\"\r\n            />\r\n            <Button\r\n              disable={disable}\r\n              buttonHandler={() => bubble(setDisable, array, speed)}\r\n              text=\"Bubble Sort\"\r\n            />\r\n            <Button\r\n              buttonHandler={() => mergeSort(setDisable, array, speed)}\r\n              disable={disable}\r\n              text=\"Merge Sort\"\r\n            />\r\n            <Button\r\n              text=\"Generate New Array\"\r\n              disable={disable}\r\n              buttonHandler={generateNewArray}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SortingArray;\r\n","import { mergeSortAlgorithm } from \"../MergeSort/MergeSort\";\r\n\r\nexport function mergeSort(disable, arr, speed) {\r\n  disable(true);\r\n  const prevArray = [...arr];\r\n  const animations = mergeSortAlgorithm(prevArray);\r\n  for (let i = 0; i < animations.length; i++) {\r\n    const arrayBars = document.getElementsByClassName(\"column\");\r\n    const isColorChange = i % 3 !== 2;\r\n    if (isColorChange) {\r\n      const [barOneIdx, barTwoIdx] = animations[i];\r\n      const barOneStyle = arrayBars[barOneIdx].style;\r\n      const barTwoStyle = arrayBars[barTwoIdx].style;\r\n      const color = i % 3 === 0 ? \"red\" : \"green\";\r\n      setTimeout(() => {\r\n        barOneStyle.backgroundColor = color;\r\n        barTwoStyle.backgroundColor = color;\r\n      }, i * speed);\r\n    } else {\r\n      setTimeout(() => {\r\n        const [barOneIdx, newHeight] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        barOneStyle.height = `${newHeight}px`;\r\n      }, i * speed);\r\n    }\r\n  }\r\n}\r\n","import \"./App.css\";\nimport SortingArray from \"./Components/SortingArray\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingArray />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allColumns\":\"SortingArray_allColumns__1_tFu\",\"buttonsDiv\":\"SortingArray_buttonsDiv__3HNoK\"};"],"sourceRoot":""}